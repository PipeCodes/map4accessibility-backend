{
    "openapi": "3.0.0",
    "info": {
        "title": "Map4Accessibility Backend",
        "description": "Map4Accessibility Backend",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.2"
    },
    "servers": [
        {
            "url": "/api/v1"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "appUser"
                ],
                "summary": "login AppUser",
                "description": "",
                "operationId": "login",
                "requestBody": {
                    "description": " object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/requestLoginObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "datetime"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid username/password supplied"
                    },
                    "400": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "api_key_security": []
                    }
                ]
            }
        },
        "/auth/login-by-provider": {
            "post": {
                "tags": [
                    "appUser"
                ],
                "summary": "login provider AppUser",
                "description": "",
                "operationId": "loginByProvider",
                "requestBody": {
                    "description": " object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/requestLoginByProviderObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "datetime"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid provider data supplied"
                    },
                    "400": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "api_key_security": []
                    }
                ]
            }
        },
        "/auth/password-recover": {
            "post": {
                "tags": [
                    "appUser"
                ],
                "summary": "password recover AppUser",
                "description": "",
                "operationId": "passwordRecover",
                "requestBody": {
                    "description": " object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/requestpasswordRecoverObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "datetime"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid API KEY supplied"
                    },
                    "400": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "api_key_security": []
                    }
                ]
            }
        },
        "/auth/check-email": {
            "post": {
                "tags": [
                    "appUser"
                ],
                "summary": "check-email AppUser",
                "description": "",
                "operationId": "checkEmail",
                "requestBody": {
                    "description": " object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/requestCheckEmailObject"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "datetime"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicate content"
                    },
                    "401": {
                        "description": "Invalid API KEY supplied"
                    },
                    "400": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "api_key_security": []
                    }
                ]
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "appUser"
                ],
                "summary": "Create AppUser",
                "description": "",
                "operationId": "register",
                "requestBody": {
                    "description": "Create AppUser object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "datetime"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid username/password supplied"
                    },
                    "400": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "api_key_security": []
                    }
                ]
            }
        },
        "/auth/profile": {
            "get": {
                "tags": [
                    "appUser"
                ],
                "summary": "Get AppUser Data",
                "description": "",
                "operationId": "getAuthenticated",
                "responses": {
                    "200": {
                        "description": "successful get data",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "datetime"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid username/password supplied"
                    },
                    "400": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/faqs": {
            "get": {
                "tags": [
                    "FAQ's"
                ],
                "summary": "Get list of FAQs",
                "description": "Returns list of FAQs",
                "operationId": "getFaqs",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Set language parameter",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FAQs"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/legal-text/{type}": {
            "get": {
                "tags": [
                    "Legal Texts"
                ],
                "summary": "Get a legal text",
                "description": "Returns a legal text",
                "operationId": "getLegalText",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Set language parameter",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/LegalText--type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LegalText"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "requestLoginObject": {
                "properties": {
                    "email": {
                        "format": "email"
                    },
                    "password": {}
                },
                "type": "object"
            },
            "requestLoginByProviderObject": {
                "properties": {
                    "email": {
                        "format": "email"
                    },
                    "auth_type": {
                        "example": "facebook"
                    },
                    "auth_code": {
                        "type": "string",
                        "example": "123"
                    }
                },
                "type": "object"
            },
            "requestpasswordRecoverObject": {
                "properties": {
                    "email": {
                        "format": "email"
                    }
                },
                "type": "object"
            },
            "requestCheckEmailObject": {
                "properties": {
                    "email": {
                        "format": "email"
                    }
                },
                "type": "object"
            },
            "AppUser": {
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "format": "int64"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name"
                    },
                    "surname": {
                        "title": "Surname",
                        "description": "Surname"
                    },
                    "birthdate": {
                        "title": "Birthdate",
                        "description": "Birthdate",
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "disabilities": {
                        "title": "Disabilities",
                        "description": "Disabilities",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "visual",
                            "motor"
                        ]
                    },
                    "terms_accepted": {
                        "title": "Terms Accepted",
                        "description": "Terms Accepted",
                        "type": "boolean"
                    },
                    "auth_providers": {
                        "title": "Auth Providers",
                        "description": "Auth Providers",
                        "type": "object",
                        "example": {
                            "facebook": 123,
                            "gmail": 456456546
                        },
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "FAQ": {
                "title": "FAQ Object",
                "description": "FAQ model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Book",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "question": {
                        "title": "question",
                        "type": "string",
                        "example": "Is this a question?"
                    },
                    "answer": {
                        "title": "answer",
                        "type": "string",
                        "example": "This is an answer!"
                    },
                    "order": {
                        "title": "order",
                        "type": "integer",
                        "example": "1"
                    },
                    "locale": {
                        "title": "locale",
                        "type": "string",
                        "example": "en"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "FAQs": {
                "title": "FAQ Response",
                "properties": {
                    "success": {
                        "title": "success",
                        "type": "boolean",
                        "readOnly": "true",
                        "example": "true"
                    },
                    "message": {
                        "title": "message",
                        "type": "string",
                        "readOnly": "true",
                        "example": "null"
                    },
                    "result": {
                        "title": "result",
                        "properties": {
                            "data": {
                                "title": "data",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FAQ"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "LegalText": {
                "title": "Legal Text Object",
                "description": "Legal Text model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Legal Text",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "type": {
                        "title": "type",
                        "type": "string",
                        "example": "terms"
                    },
                    "description": {
                        "title": "description",
                        "type": "string",
                        "example": "This is a Legal Text!"
                    },
                    "locale": {
                        "title": "locale",
                        "type": "string",
                        "example": "en"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "LegalTexts": {
                "title": "Legal Text Response",
                "properties": {
                    "success": {
                        "title": "success",
                        "type": "boolean",
                        "readOnly": "true",
                        "example": "true"
                    },
                    "message": {
                        "title": "message",
                        "type": "string",
                        "readOnly": "true",
                        "example": "null"
                    },
                    "result": {
                        "title": "result",
                        "properties": {
                            "data": {
                                "title": "data",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LegalText"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "LegalText--type": {
                "name": "type",
                "in": "path",
                "description": "Type of Legal Text",
                "required": true,
                "schema": {
                    "type": "string",
                    "example": "terms"
                }
            }
        },
        "securitySchemes": {
            "api_key_security": {
                "type": "apiKey",
                "description": "A API_KEY 1 security validation",
                "name": "x-api-key",
                "in": "header"
            },
            "sanctum": {
                "type": "apiKey",
                "description": "A 2 security validation, enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "appUser",
            "description": "Operations about App User",
            "externalDocs": {
                "description": "Find out more about store",
                "url": "http://swagger.io"
            }
        }
    ],
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "security": [
        {
            "api_key_security": [
                "read",
                "write"
            ],
            "sanctum": [
                "read",
                "write"
            ]
        }
    ]
}
